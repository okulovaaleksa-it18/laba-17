// STL2Seq8. Дан вектор V с четным количеством элементов. 
// Добавить в середину вектора 5 нулевых элементов. 
// Использовать один вызов функции insert.

#include <iostream>
#include <vector>
#include <iterator>
#include <fstream>
#include <string>
#include <ctime>
#include <cstdlib>

using namespace std;

//проверка является ли  переданая строка целым числом
bool IsNumber(const string& str) 
{
    if (str.empty()) return false;
    int start = (str[0] == '-' || str[0] == '+') ? 1 : 0;
    for (int i = start; i < str.length(); ++i) 
    {
        if (!isdigit(str[i])) return false;
    }
    return start < str.length();
}

//заполнение с клавиатуры
void console(vector<int>& V) 
{
    int n;
    string n1;
    cout << " Введите количество элементов (четное число): ";
    cin >> n1;
    if (!IsNumber(n1) || stoi(n1) % 2 != 0)
    { 
        cout << " Недопустимое значение.";
        exit(0);
    }
    n = stoi(n1);

    cout << " Введите " << n << " элементов: ";
    for (int i = 0; i < n; ++i) 
    {
        int num;
        string num1;
        cin >> num1;
        if (!IsNumber(num1))
        { 
            cout << " Недопустимое значение.";
            exit(0);
        }
        num = stoi(num1);
        V.push_back(num);
    }
    cout << endl;
}

//заполнение из файла
void file(vector<int>& V) 
{
    ifstream file("lab171.txt");
    if (!file)
    {
        cout << " Не удалось открыть файл!";
        exit(0);
    }

    string n1, num1;
    int n, num;
    file >> n1;
    if (!IsNumber(n1) || stoi(n1) % 2 != 0)
    {
        cout << " Недопустимое значение.";
        exit(0);
    }
    n = stoi(n1);

    for (int i = 0; i < n; ++i) 
    {
        file >> num1;
        if (!IsNumber(num1))
        { 
            cout << " Недопустимое значение.";
            exit(0);
        }
        num = stoi(num1);
        V.push_back(num);
    }
}

//заполнение случайными числами
void random(vector<int>& V) 
{
    int n;
    string n1;
    srand(time(nullptr));

    cout << " Введите количество элементов (четное число): ";
    cin >> n1;
    if (!IsNumber(n1) || stoi(n1) % 2 != 0)
    {
        cout << " Недопустимое значение.";
        exit(0);
    }
    n = stoi(n1);

    for (int i = 0; i < n; ++i) {
        V.push_back(rand() % 100);
    }
}

//вставляет 5 нулевых элементов в середину вектора
void insertZeros(vector<int>& V) 
{
    size_t middle = V.size() / 2;
    V.insert(V.begin() + middle, 5, 0);
}

void printVector(const vector<int>& V) 
{
    cout << " Вектор: ";
    for (vector<int>::const_iterator it = V.begin(); it != V.end(); ++it) 
    {
        cout << *it << " ";
    }
    cout << endl;
}

int main() 
{
    setlocale(LC_ALL, "ru");

    vector<int> V;
    cout << " Выберите способ заполнения вектора: " << endl;
    cout << " 1. Заполнение случайными числами." << endl;
    cout << " 2. Заполнение вручную." << endl;
    cout << " 3. Заполнение из файла." << endl;

    int choice;
    cout << " ";
    cin >> choice;

    switch (choice) 
    {
    case 1:
        random(V);
        break;
    case 2:
        console(V);
        break;
    case 3:
        file(V);
        break;
    default:
        cout << " Недопустимое значение.";
        return 0;
    }

    cout << endl;

    cout << " Исходный вектор: ";
    printVector(V);

    insertZeros(V);

    cout << " Вектор после вставки нулей: ";
    printVector(V);

    return 0;
}
